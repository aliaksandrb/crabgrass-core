//
// define here any new mixins you want available everywhere
//

//
// this is based on the susy mixin 'columns', but it eats the gutter.
// in other words, the gutter is added to the width of the column,
// and no gutter is added on the outside of the column.
//

@mixin columns-eat-gutter($n, $context: false) {
  @include float(left);
  width: columns($n, $context) + gutter($context);
  margin-right: 0;
  @if $webkit-selector {
    #{$webkit-selector} & {
      // nudging twice would be too much nudge
      width: columns($n, $context) + gutter-nudge($context);
    }
  }
}


//
// vertical align an element within the center of an enclosing element
// see: http://blog.themeforest.net/tutorials/vertical-centering-with-css/
// NOTE: this only works if the enclosing element is position:relative.
//

@mixin center-vertically($height) {
  position: absolute;
  top: 50%;
  height: $height;
  margin-top: -($height/2);
  padding-top: 0;
  padding-bottom: 0;
}

// center a single line of text vertically
@mixin center-line-vertically($height) {
  height: $height;
  line-height: $height;
}

//
// An UL,LI menu that looks like a cutout and is positioned at the bottom
// of the enclosing block.
//
// This mixin is applied to the enclosing block.
//
// the markup should look like this:
//
// enclosing-block
//   ul
//     li.tab
//       a.tab
//     li.tab
//       a.tab
//
// the selector the ul is passed into this method.
//
// it is difficult to create cutout tabs with a border that look good
// in all browsers and at different client font-sizes.
//
// the problem is that the tab element needs to line up exactly with the
// bottom of the enclosing block in order to make the cutout illusion work.
// most methods of doing this create weird jitters in webkit
// and gecko when resizing the screen or changing the font size. it does not
// look so good to have a dark line under your tab, breaking the illusion of
// a cutout.
//
// the method which makes this jitter-free is to use a height and a line-height
// for the <a> tag instead of vertical padding. This requires that <a> is a block
// which requires that the <li> is block & floated, instead of inline.
//
// This method seems to produce by far the most consistant results of letting
// the active tab sit snugly on the bottom of the enclosing div.
//
// Change with caution: I spent way too much time getting this to work.
//

@mixin cutout_menu(
  $ul_id,
  $tab_margin: 10px,
  $active_background: white,
  $active_border: false) {

  // allows us to put the menu at the bottom
  position: relative;

  ul##{$ul_id} {
    // allows us to put the menu at the bottom
    position: absolute;

    // puts the menu at the bottom of the enclosing block,
    // minus the overhand needed to cover the border:
    bottom: -(border_width($active_border));

    white-space: nowrap;
    // don't add margin or padding to ul. it will mess everything up.
    margin: 0;
    padding: 0;

    li.tab {
      display: block;
      float: left;
      &.first {margin-left: $tab_margin;}
      &.last  {margin-right: $tab_margin;}
      a.tab {
        @include cg-hover-link;
        display: block;
         // a reasonable default padding.
        padding: 0px 1em;

        // using height and line-height makes for much more consistant rendering
        // than using vertical padding. essential to prevent tabs from looking
        // horrible at different fonts sizes.
        height: 2em;
        line-height: 2em;

        // the transparent border is needed to prevent the menu from jittering
        // when the active border is applied.
        border: 1px solid transparent;
        border-bottom: 0;

        &.active {
          background-color: $active_background;
          @if $active_border {
            border: $active_border;
            border-bottom: 0;
          }
        }
      }
    }
  }

}


//
// by default, we include hover-link for all <a> tags.
// If you don't want this behavior, then you can enable hover-link here
// and it will be included in appropriate places.
//

@mixin cg-hover-link() {
  // @include hover-link;
}

//
// Border Radius
//
// Sometimes we need to specify border radius for a particular side
// without globbering all the other dimensions.
//

@mixin border-left-radius($radius: 5px) {
   -webkit-border-top-left-radius: $radius;
      -moz-border-top-left-radius: $radius;
           border-top-left-radius: $radius;
-webkit-border-bottom-left-radius: $radius;
   -moz-border-bottom-left-radius: $radius;
        border-bottom-left-radius: $radius;
}

@mixin border-right-radius($radius: 5px) {
   -webkit-border-top-right-radius: $radius;
      -moz-border-top-right-radius: $radius;
           border-top-right-radius: $radius;
-webkit-border-bottom-right-radius: $radius;
   -moz-border-bottom-right-radius: $radius;
        border-bottom-right-radius: $radius;
}

@mixin border-top-radius($radius: 5px) {
   -webkit-border-top-left-radius: $radius;
      -moz-border-top-left-radius: $radius;
           border-top-left-radius: $radius;
  -webkit-border-top-right-radius: $radius;
     -moz-border-top-right-radius: $radius;
          border-top-right-radius: $radius;
}

@mixin border-bottom-radius($radius: 5px) {
 -webkit-border-bottom-left-radius: $radius;
    -moz-border-bottom-left-radius: $radius;
         border-bottom-left-radius: $radius;
-webkit-border-bottom-right-radius: $radius;
   -moz-border-bottom-right-radius: $radius;
        border-bottom-right-radius: $radius;

}

//
// Gradients
//

// @mixin gradient-horizontal($startColor: #555, $endColor: #333) {
//   background-color: $endColor;
//   background-image: -moz-linear-gradient(left, $startColor, $endColor); // FF 3.6+
//   background-image: -ms-linear-gradient(left, $startColor, $endColor); // IE10
//   background-image: -webkit-gradient(linear, 0 0, 100% 0, from($startColor), to($endColor)); // Safari 4+, Chrome 2+
//   background-image: -webkit-linear-gradient(left, $startColor, $endColor); // Safari 5.1+, Chrome 10+
//   background-image: -o-linear-gradient(left, $startColor, $endColor); // Opera 11.10
//   background-image: linear-gradient(left, $startColor, $endColor); // Le standard
//   background-repeat: repeat-x;
//   filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='#{$startColor}', endColorstr='#{$endColor}', GradientType=1), $startColor, $endColor; // IE9 and down
// }
// @mixin gradient-vertical($startColor: #555, $endColor: #333) {
//   background-color: mix($startColor, $endColor, 60%);
//   background-image: -moz-linear-gradient(top, $startColor, $endColor); // FF 3.6+
//   background-image: -ms-linear-gradient(top, $startColor, $endColor); // IE10
//   background-image: -webkit-gradient(linear, 0 0, 0 100%, from($startColor), to($endColor)); // Safari 4+, Chrome 2+
//   background-image: -webkit-linear-gradient(top, $startColor, $endColor); // Safari 5.1+, Chrome 10+
//   background-image: -o-linear-gradient(top, $startColor, $endColor); // Opera 11.10
//   background-image: linear-gradient(top, $startColor, $endColor); // The standard
//   background-repeat: repeat-x;
//   filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='#{$startColor}', endColorstr='#{$endColor}', GradientType=0),$startColor,$endColor; // IE9 and down
// }
// @mixin gradient-directional($startColor: #555, $endColor: #333, $deg: 45deg) {
//   background-color: $endColor;
//   background-repeat: repeat-x;
//   background-image: -moz-linear-gradient($deg, $startColor, $endColor); // FF 3.6+
//   background-image: -ms-linear-gradient($deg, $startColor, $endColor); // IE10
//   background-image: -webkit-linear-gradient($deg, $startColor, $endColor); // Safari 5.1+, Chrome 10+
//   background-image: -o-linear-gradient($deg, $startColor, $endColor); // Opera 11.10
//   background-image: linear-gradient($deg, $startColor, $endColor); // The standard
// }
// @mixin gradient-vertical-three-colors($startColor: #00b3ee, $midColor: #7a43b6, $colorStop: 50%, $endColor: #c3325f) {
//   background-color: mix($midColor, $endColor, 80%);
//   background-image: -webkit-gradient(linear, 0 0, 0 100%, from($startColor), color-stop($colorStop, $midColor), to($endColor));
//   background-image: -webkit-linear-gradient($startColor, $midColor $colorStop, $endColor);
//   background-image: -moz-linear-gradient(top, $startColor, $midColor $colorStop, $endColor);
//   background-image: -ms-linear-gradient($startColor, $midColor $colorStop, $endColor);
//   background-image: -o-linear-gradient($startColor, $midColor $colorStop, $endColor);
//   background-image: linear-gradient($startColor, $midColor $colorStop, $endColor);
//   background-repeat: no-repeat;
//   filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='#{$startColor}', endColorstr='#{$endColor}', GradientType=0), $startColor, $endColor; // IE9 and down, gets no color-stop at all the proper fallback
// }
// @mixin gradient-radial($innerColor: #555, $outerColor: #333)  {
//   background-color: $outerColor;
//   background-image: -webkit-gradient(radial, center center, 0, center center, 460, from($innerColor), to($outerColor));
//   background-image: -webkit-radial-gradient(circle, $innerColor, $outerColor);
//   background-image: -moz-radial-gradient(circle, $innerColor, $outerColor);
//   background-image: -ms-radial-gradient(circle, $innerColor, $outerColor);
//   background-repeat: no-repeat;
//   // Opera cannot do radial gradients yet
// }
// @mixin gradient-striped($color,$angle: -45deg) {
//   background-color: $color;
//   background-image: -webkit-gradient(linear, 0 100%, 100% 0, color-stop(.25, rgba(255,255,255,.15)), color-stop(.25, transparent), color-stop(.5, transparent), color-stop(.5, rgba(255,255,255,.15)), color-stop(.75, rgba(255,255,255,.15)), color-stop(.75, transparent), to(transparent));
//   background-image: -webkit-linear-gradient($angle, rgba(255,255,255,.15) 25%, transparent 25%, transparent 50%, rgba(255,255,255,.15) 50%, rgba(255,255,255,.15) 75%, transparent 75%, transparent);
//   background-image: -moz-linear-gradient($angle, rgba(255,255,255,.15) 25%, transparent 25%, transparent 50%, rgba(255,255,255,.15) 50%, rgba(255,255,255,.15) 75%, transparent 75%, transparent);
//   background-image: -ms-linear-gradient($angle, rgba(255,255,255,.15) 25%, transparent 25%, transparent 50%, rgba(255,255,255,.15) 50%, rgba(255,255,255,.15) 75%, transparent 75%, transparent);
//   background-image: -o-linear-gradient($angle, rgba(255,255,255,.15) 25%, transparent 25%, transparent 50%, rgba(255,255,255,.15) 50%, rgba(255,255,255,.15) 75%, transparent 75%, transparent);
//   //background-image: linear-gradient($angle, rgba(255,255,255,.15) 25%, transparent 25%, transparent 50%, rgba(255,255,255,.15) 50%, rgba(255,255,255,.15) 75%, transparent 75%, transparent);
// }
