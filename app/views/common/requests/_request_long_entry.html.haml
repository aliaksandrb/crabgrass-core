- spinner_id = request.dom_id
- url = context_request_path(request, :state => current_state)
- approve_url = context_request_path(request, :state => current_state, :mark => 'approve')
- reject_url = context_request_path(request, :state => current_state, :mark => 'reject')

%h2= I18n.t request.name

.p
  -# BASIC INFO
  = :created_by_entity.tcap(:entity => link_to_entity(request.created_by))
  .br= content_tag(:i,full_date(request.created_at))

- # STATUS
- if request.approved?
  .p
    = :approved_by_entity.tcap(:entity => link_to_entity(request.approved_by))
    .br= content_tag(:i,full_date(request.updated_at))

-# unfortunately, there is not yet a rejected_by column.
-# if request.rejected?
-#  .p
-#    = :rejected_by_entity.tcap(:entity => link_to_entity(request.rejected_by))
-#    .br= content_tag(:i,full_date(request.updated_at))

- # DESCRIPTION
.p= expand_links(request.description)

.form_buttons

  - # APPROVAL / REJECTION
  - if request.pending? and request.may_approve?(current_user)
    = button_to_remote(:approve.tcap, :url => approve_url, :method => :put,
      :loading => show_spinner(spinner_id))
    = button_to_remote(:reject.tcap, :url => reject_url, :method => :put,
      :loading => show_spinner(spinner_id))

  - # DESTRUCTION
  - if request.may_destroy?(current_user)
    = button_to_remote(:destroy.tcap, :url => context_request_path(request),
      :method => :delete, :loading => show_spinner(spinner_id))

  - # VOTING
  - if request.votes.count > 0
    = I18n.t(:request_votes_tally_info, :approved_count => request.votes.approved.count,
      :rejected_count => request.votes.rejected.count)

  = spinner(spinner_id)


-# commented out
  - # make sure there are links to all the parties involved
  = link_to_entity(request.created_by) if request.created_by
  = link_to_entity(request.approved_by) if request.approved_by
  = # TODO: link_to_entity(request.rejected_by) if request.rejected_by
  = link_to_entity(request.recipient) if request.recipient
  = link_to_entity(request.requestable) if request.requestable

